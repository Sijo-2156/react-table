'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _MultiSelect = require('../MultiSelect');

var _MultiSelect2 = _interopRequireDefault(_MultiSelect);

var _SelectField = require('../../SelectField/SelectField');

var _SelectField2 = _interopRequireDefault(_SelectField);

var _WithObjectValue = require('../WithObjectValue');

var _WithObjectValue2 = _interopRequireDefault(_WithObjectValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var WithObjectValueDemo = (0, _WithObjectValue2.default)(_MultiSelect2.default);

var value = [{ value: '2', display: 'test 2' }, { value: '3', display: 'test 3' }];

var options = [{ value: '0', display: 'test 1' }, { value: '1', display: 'test 2' }, { value: '2', display: 'test 3' }, { value: '3', display: 'test 4' }];

describe('WithObjectValue', function () {
  var multiSelect = void 0;

  beforeEach(function () {
    multiSelect = shallow(_react2.default.createElement(
      WithObjectValueDemo,
      {
        options: options,
        valueProp: 'value',
        name: 'example',
        displayProp: 'display',
        value: value,
        placeholder: 'Select one or more items' },
      _react2.default.createElement(_SelectField2.default, null)
    ));
  });

  it('should render', function () {
    expect(multiSelect).toMatchSnapshot();
  });

  it('should return an empty list', function () {
    expect(multiSelect.instance().flatten()).toMatchSnapshot();
  });

  it('should return a flattened list when passed a list of objects', function () {
    expect(multiSelect.instance().flatten(options)).toMatchSnapshot();
  });

  it('should return an inflated list when passed a flatted list', function () {
    expect(multiSelect.instance().inflate(['0', '1', '2', '3'])).toMatchSnapshot();
  });
});